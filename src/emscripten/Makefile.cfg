PKG_CONFIG = :
SDL_CONFIG = :
PNG_CONFIG = :

CC = emcc
CXX = em++

OPTS += -DEMSCRIPTEN -DTOUCHINPUTS

ifdef DEBUGMODE
TOTALMEMORY=101187584
else
TOTALMEMORY=99287040
endif

EMFLAGS = \
    -s USE_LIBPNG=1 \
    -s USE_SDL=2 \
    -s USE_SDL_MIXER=2 \
    -s USE_SDL_IMAGE=2 \
    -s USE_ZLIB=1 \
    -s TOTAL_MEMORY=$(TOTALMEMORY) \
    -s ALLOW_MEMORY_GROWTH=1 \
    -s EXIT_RUNTIME=1 \
    -lidbfs.js \
    -s EXPORTED_FUNCTIONS='["_main","_change_resolution","_inject_keycode","_inject_text","_pause_loop","_resume_loop","_COM_ImmedExecute"]' \
    -s EXTRA_EXPORTED_RUNTIME_METHODS='["ccall"]' \
    -s ASYNCIFY=1 \
    --preload-file ../assets@/ \
    --use-preload-cache \
    --shell-file ../srb2.html

# Note about ASYNCIFY:
# To mitigate the performance penalty, it would be ideal to use 
# -s ASYNCIFY_IGNORE_INDIRECT or specify a ASYNCIFY_WHITELIST.
# However, both these options break wipes. One wipe will run, but
# subsequent wipes will cause out of memory accesses.
# Also note that SDL needs a hint set to avoid an async error -- see
# i_system.c.

# This causes a function address error.
# -s ASYNCIFY_WHITELIST='["F_RunWipe","SDL_WaitEvent","SDL_WaitEventTimeout","SDL_Delay","SDL_RenderPresent","GLES2_RenderPresent","SDL_GL_SwapWindow","Emscripten_GLES_SwapWindow"]' \

ifdef DEBUGMODE
EMFLAGS+=-O0 -g3
else
EMFLAGS+=-O3
endif

CFLAGS += $(EMFLAGS)
CPPFLAGS += $(EMFLAGS)
LDFLAGS += $(EMFLAGS)
