doom
{
	misc
	{
		title = "Miscellaneous";

		0
		{
			title = "None";
			prefix = "(0)";
		}

		1
		{
			title = "Per-Sector Gravity";
			prefix = "(1)";
			flags64text = "[6] Flip in reverse gravity";
		}

		5
		{
			title = "Camera Scanner";
			prefix = "(5)";
		}

		7
		{
			title = "Sector Flat Alignment";
			prefix = "(7)";
			flags2048text = "[11] Don't align floor";
			flags4096text = "[12] Don't align ceiling";
			flags8192text = "[13] Use texture offsets";
		}

		10
		{
			title = "Culling Plane";
			prefix = "(10)";
			flags64text = "[6] Cull only while in sector";
		}

		13
		{
			title = "Heat Wave Effect";
			prefix = "(13)";
		}

	    40
		{
			title = "Visual Portal Between Tagged Linedefs";
			prefix = "(40)";
		}

	    41
		{
			title = "Horizon Effect";
			prefix = "(41)";
		}

		50
		{
			title = "Instantly Lower Floor on Level Load";
			prefix = "(50)";
		}

		51
		{
			title = "Instantly Raise Ceiling on Level Load";
			prefix = "(51)";
		}

		63
		{
			title = "Fake Floor/Ceiling Planes";
			prefix = "(63)";
		}

		540
		{
			title = "Floor Friction";
			prefix = "(540)";
		}
	}

	parameters
	{
		title = "Parameters";

		2
		{
			title = "Custom Exit";
			prefix = "(2)";
			flags2text = "[1] Check emeralds";
			flags64text = "[6] Skip score tally";
		}

		3
		{
			title = "Zoom Tube Parameters";
			prefix = "(3)";
			flags512text = "[9] Ignore player direction";
		}

		4
		{
			title = "Speed Pad Parameters";
			prefix = "(4)";
			flags512text = "[9] No teleport to center";
			flags1024text = "[10] Force spinning frames";
		}

		8
		{
			title = "Special Sector Properties";
			prefix = "(8)";
			flags32text = "[5] Invert precipitation";
			flags64text = "[6] Touch only ceiling";
			flags128text = "[7] Allow opposite gravity";
			flags256text = "[8] Touch sector edge";
			flags512text = "[9] Touch floor or ceiling";
		}

		9
		{
			title = "Chain Parameters";
			prefix = "(9)";
			flags32text = "[5] Swing instead of spin";
			flags64text = "[6] Player-turnable chain";
			flags128text = "[7] Make chain from end item";
			flags256text = "[8] Spawn link at origin";
			flags512text = "[9] Don't clip inside ground";
			flags1024text = "[10] No distance check";
		}

		11
		{
			title = "Rope Hang Parameters";
			prefix = "(11)";
			flags32text = "[5] Don't loop";
			flags64text = "[6] Static";
		}

		12
		{
			title = "Rock Spawner Parameters";
			prefix = "(12)";
			flags64text = "[6] Randomize speed";
		}

		14
		{
			title = "Bustable Block Parameters";
			prefix = "(14)";
			flags32text = "[5] Particles launch from center";
		}

		15
		{
			title = "Fan Particle Spawner Parameters";
			prefix = "(15)";
		}

		16
		{
			title = "Minecart Parameters";
			prefix = "(16)";
		}

		64
		{
			title = "Continuously Appearing/Disappearing FOF";
			prefix = "(64)";
			flags2text = "[1] Use control sector tag";
			flags64text = "[6] No sound effect";
		}

		65
		{
			title = "Bridge Thinker <disabled>";
			prefix = "(65)";
		}
	}

	polyobject
	{
		title = "PolyObject";

		20
		{
			title = "First Line";
			prefix = "(20)";
		}

		21
		{
			title = "Explicitly Include Line <disabled>";
			prefix = "(21)";
		}

		22
		{
			title = "Parameters";
			prefix = "(22)";
			flags64text = "[6] Trigger linedef executor";
			flags128text = "[7] Intangible";
			flags256text = "[8] Stopped by pushables";
			flags512text = "[9] Render flats";
		}

		30
		{
			title = "Waving Flag";
			prefix = "(30)";
		}

		31
		{
			title = "Displacement by Front Sector";
			prefix = "(31)";
		}

		32
		{
			title = "Angular Displacement by Front Sector";
			prefix = "(32)";
			flags8text = "[3] Set delay by backside sector";
			flags64text = "[6] Don't turn players";
			flags512text = "[9] Turn all objects";
		}
	}

	planemove
	{
		title = "Plane Movement";

		52
		{
			title = "Continuously Falling Sector";
			prefix = "(52)";
			flags64text = "[6] Continuously rising";
		}

		53
		{
			title = "Continuous Floor/Ceiling Mover";
			prefix = "(53)";
		}

		54
		{
			title = "Continuous Floor Mover";
			prefix = "(54)";
		}

		55
		{
			title = "Continuous Ceiling Mover";
			prefix = "(55)";
		}

		56
		{
			title = "Continuous Two-Speed Floor/Ceiling Mover";
			prefix = "(56)";
		}

		57
		{
			title = "Continuous Two-Speed Floor Mover";
			prefix = "(57)";
		}

		58
		{
			title = "Continuous Two-Speed Ceiling Mover";
			prefix = "(58)";
		}

		59
		{
			title = "Activate Moving Platform";
			prefix = "(59)";
			flags64text = "[6] Move upwards at start";
		}

		60
		{
			title = "Activate Moving Platform (Adjustable Speed)";
			prefix = "(60)";
			flags64text = "[6] Move upwards at start";
		}

		61
		{
			title = "Crusher (Ceiling to Floor)";
			prefix = "(61)";
			flags512text = "[9] Double, constant speed";
		}

		62
		{
			title = "Crusher (Floor to Ceiling)";
			prefix = "(62)";
			flags512text = "[9] Double, constant speed";
		}

		66
		{
			title = "Move Floor by Displacement";
			prefix = "(66)";
			flags64text = "[6] Inverse movement";
		}

		67
		{
			title = "Move Ceiling by Displacement";
			prefix = "(67)";
			flags64text = "[6] Inverse movement";
		}

		68
		{
			title = "Move Floor and Ceiling by Displacement";
			prefix = "(68)";
			flags64text = "[6] Inverse movement";
		}
	}

	fofsolid
	{
		title = "FOF (solid)";

		100
		{
			title = "Solid, Opaque";
			prefix = "(100)";
			flags8text = "[3] Slope skew sides";
			flags32text = "[5] Only block player";
			flags128text = "[7] Only block non-players";
			3dfloor = true;
			3dfloorflags = "19F";
		}

		101
		{
			title = "Solid, Opaque, No Shadow";
			prefix = "(101)";
			flags8text = "[3] Slope skew sides";
			flags32text = "[5] Only block player";
			flags128text = "[7] Only block non-players";
			3dfloor = true;
			3dfloorflags = "1DF";
		}

		102
		{
			title = "Solid, Translucent";
			prefix = "(102)";
			flags8text = "[3] Slope skew sides";
			flags32text = "[5] Only block player";
			flags64text = "[6] Render insides";
			flags128text = "[7] Only block non-players";
			3dfloor = true;
			3dfloorflags = "195F";
			flags643dfloorflagsadd = "7C80";
		}

		103
		{
			title = "Solid, Sides Only";
			prefix = "(103)";
			flags8text = "[3] Slope skew sides";
			flags32text = "[5] Only block player";
			flags128text = "[7] Only block non-players";
			3dfloor = true;
			3dfloorflags = "1CF";
		}

		104
		{
			title = "Solid, No Sides";
			prefix = "(104)";
			flags32text = "[5] Only block player";
			flags64text = "[6] Cast shadow";
			flags128text = "[7] Only block non-players";
			3dfloor = true;
			3dfloorflags = "1D7";
			flags643dfloorflagsremove = "40";
		}

		105
		{
			title = "Solid, Invisible";
			prefix = "(105)";
			flags32text = "[5] Only block player";
			flags128text = "[7] Only block non-players";
			3dfloor = true;
			3dfloorflags = "47";
		}

		140
		{
			title = "Intangible from Bottom, Opaque";
			prefix = "(140)";
			flags8text = "[3] Slope skew sides";
			flags32text = "[5] Only block player";
			flags64text = "[6] Don't cast shadow";
			flags128text = "[7] Only block non-players";
			3dfloor = true;
			3dfloorflags = "200841F";
			flags643dfloorflagsadd = "40";
		}

		141
		{
			title = "Intangible from Bottom, Translucent";
			prefix = "(141)";
			flags8text = "[3] Slope skew sides";
			flags32text = "[5] Only block player";
			flags64text = "[6] Don't cast shadow";
			flags128text = "[7] Render insides/block non-plr";
			3dfloor = true;
			3dfloorflags = "200191F";
			flags1283dfloorflagsadd = "7C80";
			flags643dfloorflagsadd = "40";
		}

		142
		{
			title = "Intangible from Bottom, Translucent, No Sides";
			prefix = "(142)";
			flags32text = "[5] Only block player";
			flags64text = "[6] Don't cast shadow";
			flags128text = "[7] Render insides/block non-plr";
			3dfloor = true;
			3dfloorflags = "2001917";
			flags1283dfloorflagsadd = "7C80";
			flags643dfloorflagsadd = "40";
		}

		143
		{
			title = "Intangible from Top, Opaque";
			prefix = "(143)";
			flags8text = "[3] Slope skew sides";
			flags32text = "[5] Only block player";
			flags64text = "[6] Don't cast shadow";
			flags128text = "[7] Only block non-players";
			3dfloor = true;
			3dfloorflags = "400841F";
			flags643dfloorflagsadd = "40";
		}

		144
		{
			title = "Intangible from Top, Translucent";
			prefix = "(144)";
			flags8text = "[3] Slope skew sides";
			flags32text = "[5] Only block player";
			flags64text = "[6] Don't cast shadow";
			flags128text = "[7] Render insides/block non-plr";
			3dfloor = true;
			3dfloorflags = "400191F";
			flags1283dfloorflagsadd = "7C80";
			flags643dfloorflagsadd = "40";
		}

		145
		{
			title = "Intangible from Top, Translucent, No Sides";
			prefix = "(145)";
			flags32text = "[5] Only block player";
			flags64text = "[6] Don't cast shadow";
			flags128text = "[7] Render insides/block non-plr";
			3dfloor = true;
			3dfloorflags = "4001917";
			flags1283dfloorflagsadd = "7C80";
			flags643dfloorflagsadd = "40";
		}

		146
		{
			title = "Only Tangible from Sides";
			prefix = "(146)";
			flags8text = "[3] Slope skew sides";
			flags32text = "[5] Only block player";
			flags128text = "[7] Only block non-players";
			3dfloor = true;
			3dfloorflags = "600800F";
		}
	}

	fofintangible
	{
		title = "FOF (intangible)";

		120
		{
			title = "Water, Opaque";
			prefix = "(120)";
			flags8text = "[3] Slope skew sides";
			flags64text = "[6] Use two light levels";
			flags512text = "[9] Use target light level";
			flags1024text = "[10] Ripple effect";
			3dfloor = true;
			3dfloorflags = "8F39";
			flags643dfloorflagsadd = "20000";
			flags5123dfloorflagsadd = "80000000";
			flags10243dfloorflagsadd = "40000000";
		}

		121
		{
			title = "Water, Translucent";
			prefix = "(121)";
			flags8text = "[3] Slope skew sides";
			flags64text = "[6] Use two light levels";
			flags512text = "[9] Use target light level";
			flags1024text = "[10] Ripple effect";
			3dfloor = true;
			3dfloorflags = "9F39";
			flags643dfloorflagsadd = "20000";
			flags5123dfloorflagsadd = "80000000";
			flags10243dfloorflagsadd = "40000000";
		}

		122
		{
			title = "Water, Opaque, No Sides";
			prefix = "(122)";
			flags64text = "[6] Use two light levels";
			flags512text = "[9] Use target light level";
			flags1024text = "[10] Ripple effect";
			3dfloor = true;
			3dfloorflags = "F31";
			flags643dfloorflagsadd = "20000";
			flags5123dfloorflagsadd = "80000000";
			flags10243dfloorflagsadd = "40000000";
		}

		123
		{
			title = "Water, Translucent, No Sides";
			prefix = "(123)";
			flags64text = "[6] Use two light levels";
			flags512text = "[9] Use target light level";
			flags1024text = "[10] Ripple effect";
			3dfloor = true;
			3dfloorflags = "1F31";
			flags643dfloorflagsadd = "20000";
			flags5123dfloorflagsadd = "80000000";
			flags10243dfloorflagsadd = "40000000";
		}

		124
		{
			title = "Goo Water, Translucent";
			prefix = "(124)";
			flags8text = "[3] Slope skew sides";
			flags64text = "[6] Use two light levels";
			flags512text = "[9] Use target light level";
			flags1024text = "[10] Ripple effect";
			3dfloor = true;
			3dfloorflags = "209F39";
			flags643dfloorflagsadd = "20000";
			flags5123dfloorflagsadd = "80000000";
			flags10243dfloorflagsadd = "40000000";
		}

		125
		{
			title = "Goo Water, Translucent, No Sides";
			prefix = "(125)";
			flags8text = "[3] Slope skew sides";
			flags64text = "[6] Use two light levels";
			flags512text = "[9] Use target light level";
			flags1024text = "[10] Ripple effect";
			3dfloor = true;
			3dfloorflags = "201F31";
			flags643dfloorflagsadd = "20000";
			flags5123dfloorflagsadd = "80000000";
			flags10243dfloorflagsadd = "40000000";
		}

		220
		{
			title = "Intangible, Opaque";
			prefix = "(220)";
			flags8text = "[3] Slope skew sides";
			3dfloor = true;
			3dfloorflags = "8F19";
		}

		221
		{
			title = "Intangible, Translucent";
			prefix = "(221)";
			flags8text = "[3] Slope skew sides";
			flags64text = "[6] Cast shadow";
			3dfloor = true;
			3dfloorflags = "1B59";
			flags643dfloorflagsremove = "40";
		}

		222
		{
			title = "Intangible, Sides Only";
			prefix = "(222)";
			flags8text = "[3] Slope skew sides";
			flags64text = "[6] Cast shadow";
			3dfloor = true;
			3dfloorflags = "8249";
			flags643dfloorflagsremove = "240";
		}

		223
		{
			title = "Intangible, Invisible";
			prefix = "(223)";
			3dfloor = true;
			3dfloorflags = "41";
		}
	}

	fofmoving
	{
		title = "FOF (moving)";

		150
		{
			title = "Air Bobbing";
			prefix = "(150)";
			flags8text = "[3] Slope skew sides";
			flags32text = "[5] Only block player";
			flags64text = "[6] Spindash to move";
			flags128text = "[7] Only block non-players";
			3dfloor = true;
			3dfloorflags = "19F";
		}

		151
		{
			title = "Air Bobbing (Adjustable)";
			prefix = "(151)";
			flags8text = "[3] Slope skew sides";
			flags32text = "[5] Only block player";
			flags64text = "[6] Spindash to move";
			flags128text = "[7] Only block non-players";
			3dfloor = true;
			3dfloorflags = "19F";
		}

		152
		{
			title = "Reverse Air Bobbing (Adjustable)";
			prefix = "(152)";
			flags8text = "[3] Slope skew sides";
			flags32text = "[5] Only block player";
			flags64text = "[6] Spindash to move";
			flags128text = "[7] Only block non-players";
			3dfloor = true;
			3dfloorflags = "19F";
		}

		160
		{
			title = "Floating, Bobbing";
			prefix = "(160)";
			flags8text = "[3] Slope skew sides";
			flags32text = "[5] Only block player";
			flags128text = "[7] Only block non-players";
			3dfloor = true;
			3dfloorflags = "4019F";
		}

		190
		{
			title = "Rising Platform, Solid, Opaque";
			prefix = "(190)";
			flags2text = "[1] Sink when stepped on";
			flags8text = "[3] Slope skew sides";
			flags32text = "[5] Only block player";
			flags64text = "[6] Spindash to move";
			flags128text = "[7] Only block non-players";
			3dfloor = true;
			3dfloorflags = "19F";
		}

		191
		{
			title = "Rising Platform, Solid, Opaque, No Shadow";
			prefix = "(191)";
			flags2text = "[1] Sink when stepped on";
			flags8text = "[3] Slope skew sides";
			flags32text = "[5] Only block player";
			flags64text = "[6] Spindash to move";
			flags128text = "[7] Only block non-players";
			3dfloor = true;
			3dfloorflags = "1DF";
		}

		192
		{
			title = "Rising Platform, Solid, Translucent";
			prefix = "(192)";
			flags2text = "[1] Sink when stepped on";
			flags8text = "[3] Slope skew sides";
			flags32text = "[5] Only block player";
			flags64text = "[6] Spindash to move";
			flags128text = "[7] Only block non-players";
			3dfloor = true;
			3dfloorflags = "195F";
		}

		193
		{
			title = "Rising Platform, Solid, Invisible";
			prefix = "(193)";
			flags2text = "[1] Sink when stepped on";
			flags8text = "[3] Slope skew sides";
			flags32text = "[5] Only block player";
			flags64text = "[6] Spindash to move";
			flags128text = "[7] Only block non-players";
			3dfloor = true;
			3dfloorflags = "47";
		}

		194
		{
			title = "Rising Platform, Intangible from Bottom, Opaque";
			prefix = "(194)";
			flags2text = "[1] Sink when stepped on";
			flags8text = "[3] Slope skew sides";
			flags32text = "[5] Only block player";
			flags64text = "[6] Spindash, no shadow";
			flags128text = "[7] Only block non-players";
			3dfloor = true;
			3dfloorflags = "200841F";
			flags643dfloorflagsadd = "40";
		}

		195
		{
			title = "Rising Platform, Intangible from Bottom, Translucent";
			prefix = "(195)";
			flags2text = "[1] Sink when stepped on";
			flags8text = "[3] Slope skew sides";
			flags32text = "[5] Only block player";
			flags64text = "[6] Spindash, no shadow";
			flags128text = "[7] Only block non-players";
			3dfloor = true;
			3dfloorflags = "2009D1F";
			flags643dfloorflagsadd = "40";
		}
	}

	fofcrumbling
	{
		title = "FOF (crumbling)";

		170
		{
			title = "Crumbling, Respawn";
			prefix = "(170)";
			flags8text = "[3] Slope skew sides";
			flags32text = "[5] Only block player";
			flags128text = "[7] Only block non-players";
			3dfloor = true;
			3dfloorflags = "10019F";
		}

		171
		{
			title = "Crumbling, No Respawn";
			prefix = "(171)";
			flags8text = "[3] Slope skew sides";
			flags32text = "[5] Only block player";
			flags128text = "[7] Only block non-players";
			3dfloor = true;
			3dfloorflags = "80019F";
		}

		172
		{
			title = "Crumbling, Respawn, Intangible from Bottom";
			prefix = "(172)";
			flags8text = "[3] Slope skew sides";
			flags32text = "[5] Only block player";
			flags64text = "[6] Don't cast shadow";
			flags128text = "[7] Only block non-players";
			3dfloor = true;
			3dfloorflags = "210841F";
			flags643dfloorflagsadd = "40";
		}

		173
		{
			title = "Crumbling, No Respawn, Intangible from Bottom";
			prefix = "(173)";
			flags8text = "[3] Slope skew sides";
			flags32text = "[5] Only block player";
			flags64text = "[6] Don't cast shadow";
			flags128text = "[7] Only block non-players";
			3dfloor = true;
			3dfloorflags = "218841F";
			flags643dfloorflagsadd = "40";
		}

		174
		{
			title = "Crumbling, Respawn, Int. from Bottom, Translucent";
			prefix = "(174)";
			flags8text = "[3] Slope skew sides";
			flags32text = "[5] Only block player";
			flags64text = "[6] Don't cast shadow";
			flags128text = "[7] Only block non-players";
			3dfloor = true;
			3dfloorflags = "210959F";
			flags643dfloorflagsadd = "40";
		}

		175
		{
			title = "Crumbling, No Respawn, Int. from Bottom, Translucent";
			prefix = "(175)";
			flags8text = "[3] Slope skew sides";
			flags32text = "[5] Only block player";
			flags64text = "[6] Don't cast shadow";
			flags128text = "[7] Only block non-players";
			3dfloor = true;
			3dfloorflags = "218959F";
			flags643dfloorflagsadd = "40";
		}

		176
		{
			title = "Crumbling, Respawn, Floating, Bobbing";
			prefix = "(176)";
			flags8text = "[3] Slope skew sides";
			flags32text = "[5] Only block player";
			flags64text = "[6] Spindash to move";
			flags128text = "[7] Only block non-players";
			3dfloor = true;
			3dfloorflags = "14019F";
		}

		177
		{
			title = "Crumbling, No Respawn, Floating, Bobbing";
			prefix = "(177)";
			flags8text = "[3] Slope skew sides";
			flags32text = "[5] Only block player";
			flags64text = "[6] Spindash to move";
			flags128text = "[7] Only block non-players";
			3dfloor = true;
			3dfloorflags = "1C019F";
		}

		178
		{
			title = "Crumbling, Respawn, Floating";
			prefix = "(178)";
			flags8text = "[3] Slope skew sides";
			flags32text = "[5] Only block player";
			flags128text = "[7] Only block non-players";
			3dfloor = true;
			3dfloorflags = "14019F";
		}

		179
		{
			title = "Crumbling, No Respawn, Floating";
			prefix = "(179)";
			flags8text = "[3] Slope skew sides";
			flags32text = "[5] Only block player";
			flags128text = "[7] Only block non-players";
			3dfloor = true;
			3dfloorflags = "1C019F";
		}

		180
		{
			title = "Crumbling, Respawn, Air Bobbing";
			prefix = "(180)";
			flags8text = "[3] Slope skew sides";
			flags32text = "[5] Only block player";
			flags64text = "[6] Spindash to move";
			flags128text = "[7] Only block non-players";
			3dfloor = true;
			3dfloorflags = "10019F";
		}
	}

	fofspecial
	{
		title = "FOF (special)";

		200
		{
			title = "Light Block";
			prefix = "(200)";
			3dfloor = true;
			3dfloorflags = "20201";
		}

		201
		{
			title = "Half Light Block";
			prefix = "(201)";
			3dfloor = true;
			3dfloorflags = "201";
		}

		202
		{
			title = "Fog Block";
			prefix = "(202)";
			3dfloor = true;
			3dfloorflags = "3EF19";
		}

		250
		{
			title = "Mario Block";
			prefix = "(250)";
			flags32text = "[5] Invisible block";
			flags64text = "[6] Brick block";
			3dfloor = true;
			3dfloorflags = "40019F";
		}

		251
		{
			title = "Thwomp Block";
			prefix = "(251)";
			flags512text = "[9] Custom crushing sound";
			flags1024text = "[10] Custom speed";
			3dfloor = true;
			3dfloorflags = "19F";
		}

		252
		{
			title = "Shatter Block";
			prefix = "(252)";
			flags8text = "[3] Slope skew sides";
			flags64text = "[6] Shatter only from below";
			flags512text = "[9] Shattered by pushables";
			flags1024text = "[10] Trigger linedef executor";
			3dfloor = true;
			3dfloorflags = "8800019";
			flags643dfloorflagsadd = "200006";
		}

		253
		{
			title = "Shatter Block, Translucent";
			prefix = "(253)";
			flags8text = "[3] Slope skew sides";
			flags512text = "[9] Shattered by pushables";
			flags1024text = "[10] Trigger linedef executor";
			3dfloor = true;
			3dfloorflags = "8801019";
		}

		254
		{
			title = "Bustable Block";
			prefix = "(254)";
			flags8text = "[3] Slope skew sides";
			flags64text = "[6] Strong characters only";
			flags128text = "[7] Only block non-players";
			flags512text = "[9] Shattered by pushables";
			flags1024text = "[10] Trigger linedef executor";
			3dfloor = true;
			3dfloorflags = "80001F";
			flags643dfloorflagsadd = "20000000";
		}

		255
		{
			title = "Spin-Bustable Block";
			prefix = "(255)";
			flags8text = "[3] Slope skew sides";
			flags32text = "[5] Only block player";
			flags128text = "[7] Only block non-players";
			flags512text = "[9] Shattered by pushables";
			flags1024text = "[10] Trigger linedef executor";
			3dfloor = true;
			3dfloorflags = "1080001F";
		}

		256
		{
			title = "Spin-Bustable Block, Translucent";
			prefix = "(256)";
			flags8text = "[3] Slope skew sides";
			flags32text = "[5] Only block player";
			flags128text = "[7] Only block non-players";
			flags512text = "[9] Shattered by pushables";
			flags1024text = "[10] Trigger linedef executor";
			3dfloor = true;
			3dfloorflags = "1080101F";
		}

		257
		{
			title = "Quicksand";
			prefix = "(257)";
			flags8text = "[3] Slope skew sides";
			flags1024text = "[10] Ripple effect";
			3dfloor = true;
			3dfloorflags = "1008219";
			flags10243dfloorflagsadd = "40000000";
		}

		258
		{
			title = "Laser";
			prefix = "(258)";
			flags8text = "[3] Slope skew sides";
			flags32text = "[5] Don't damage bosses";
			3dfloor = true;
			3dfloorflags = "959";
		}

		259
		{
			title = "Custom FOF";
			prefix = "(259)";
			flags32text = "[5] Only block player";
			flags128text = "[7] Only block non-players";
			flags512text = "[9] Shattered by pushables";
			flags1024text = "[10] Trigger linedef executor";
			3dfloor = true;
			3dfloorcustom = true;
		}
	}

	linedeftrigger
	{
		title = "Linedef Executor Trigger";

		300
		{
			title = "Continuous";
			prefix = "(300)";
		}

		301
		{
			title = "Each Time";
			prefix = "(301)";
			flags16384text = "[14] Also trigger on exit";
		}

		302
		{
			title = "Once";
			prefix = "(302)";
		}

		303
		{
			title = "Ring Count - Continuous";
			prefix = "(303)";
			flags2text = "[1] Rings greater or equal";
			flags64text = "[6] Rings less or equal";
			flags512text = "[9] Consider all players";
		}

		304
		{
			title = "Ring Count - Once";
			prefix = "(304)";
			flags2text = "[1] Rings greater or equal";
			flags64text = "[6] Rings less or equal";
			flags512text = "[9] Consider all players";
		}

		305
		{
			title = "Character Ability - Continuous";
			prefix = "(305)";
		}

		306
		{
			title = "Character Ability - Each Time";
			prefix = "(306)";
			flags16384text = "[14] Also trigger on exit";
		}

		307
		{
			title = "Character Ability - Once";
			prefix = "(307)";
		}

		308
		{
			title = "Race Only - Once";
			prefix = "(308)";
		}

		309
		{
			title = "CTF Red Team - Continuous";
			prefix = "(309)";
		}

		310
		{
			title = "CTF Red Team - Each Time";
			prefix = "(310)";
			flags16384text = "[14] Also trigger on exit";
		}

		311
		{
			title = "CTF Blue Team - Continuous";
			prefix = "(311)";
		}

		312
		{
			title = "CTF Blue Team - Each Time";
			prefix = "(312)";
			flags16384text = "[14] Also trigger on exit";
		}

		313
		{
			title = "No More Enemies - Once";
			prefix = "(313)";
		}

		314
		{
			title = "Number of Pushables - Continuous";
			prefix = "(314)";
			flags64text = "[6] Number greater or equal";
			flags512text = "[9] Number less";
		}

		315
		{
			title = "Number of Pushables - Once";
			prefix = "(315)";
			flags64text = "[6] Number greater or equal";
			flags512text = "[9] Number less";
		}

		317
		{
			title = "Condition Set Trigger - Continuous";
			prefix = "(317)";
		}

		318
		{
			title = "Condition Set Trigger - Once";
			prefix = "(318)";
		}

		319
		{
			title = "Unlockable - Continuous";
			prefix = "(319)";
		}

		320
		{
			title = "Unlockable - Once";
			prefix = "(320)";
		}

		321
		{
			title = "Trigger After X Calls - Continuous";
			prefix = "(321)";
			flags64text = "[6] Trigger more than once";

		}

		322
		{
			title = "Trigger After X Calls - Each Time";
			prefix = "(322)";
			flags64text = "[6] Trigger more than once";
		}

		323
		{
			title = "NiGHTSerize - Each Time";
			prefix = "(323)";
			flags2text = "[1] Mare >= Front X Offset";
			flags8text = "[3] Run only if player is NiGHTS";
			flags16text = "[4] Count from lowest of players";
			flags32text = "[5] Lap <= Front Y Offset";
			flags64text = "[6] Mare <= Front X Offset";
			flags128text = "[7] Lap >= Front Y Offset";
			flags256text = "[8] Count laps from Bonus Time";
			flags512text = "[9] Count from triggering player";
			flags16384text = "[14] Run if no more mares";
			flags32768text = "[15] Run if player is not NiGHTS";
		}

		324
		{
			title = "NiGHTSerize - Once";
			flags2text = "[1] Mare >= Front X Offset";
			flags8text = "[3] Run only if player is NiGHTS";
			flags16text = "[4] Count from lowest of players";
			flags32text = "[5] Lap <= Front Y Offset";
			flags64text = "[6] Mare <= Front X Offset";
			flags128text = "[7] Lap >= Front Y Offset";
			flags256text = "[8] Count laps from Bonus Time";
			flags512text = "[9] Count from triggering player";
			flags16384text = "[14] Run if no more mares";
			flags32768text = "[15] Run if player is not NiGHTS";
			prefix = "(324)";
		}

		325
		{
			title = "De-NiGHTSerize - Each Time";
			flags2text = "[1] Mare >= Front X Offset";
			flags8text = "[3] Run if anyone is NiGHTS";
			flags16text = "[4] Count from lowest of players";
			flags32text = "[5] Lap <= Front Y Offset";
			flags64text = "[6] Mare <= Front X Offset";
			flags128text = "[7] Lap >= Front Y Offset";
			flags256text = "[8] Count laps from Bonus Time";
			flags512text = "[9] Count from triggering player";
			flags32768text = "[15] Run if no one is NiGHTS";
			prefix = "(325)";
		}

		326
		{
			title = "De-NiGHTSerize - Once";
			flags2text = "[1] Mare >= Front X Offset";
			flags8text = "[3] Run if anyone is NiGHTS";
			flags16text = "[4] Count from lowest of players";
			flags32text = "[5] Lap <= Front Y Offset";
			flags64text = "[6] Mare <= Front X Offset";
			flags128text = "[7] Lap >= Front Y Offset";
			flags256text = "[8] Count laps from Bonus Time";
			flags512text = "[9] Count from triggering player";
			flags32768text = "[15] Run if no one is NiGHTS";
			prefix = "(326)";
		}

		327
		{
			title = "NiGHTS Lap - Each Time";
			flags2text = "[1] Mare >= Front X Offset";
			flags16text = "[4] Count from lowest of players";
			flags32text = "[5] Lap <= Front Y Offset";
			flags64text = "[6] Mare <= Front X Offset";
			flags128text = "[7] Lap >= Front Y Offset";
			flags256text = "[8] Count laps from Bonus Time";
			flags512text = "[9] Count from triggering player";
			prefix = "(327)";
		}

		328
		{
			title = "NiGHTS Lap - Once";
			flags2text = "[1] Mare >= Front X Offset";
			flags16text = "[4] Count from lowest of players";
			flags32text = "[5] Lap <= Front Y Offset";
			flags64text = "[6] Mare <= Front X Offset";
			flags128text = "[7] Lap >= Front Y Offset";
			flags256text = "[8] Count laps from Bonus Time";
			flags512text = "[9] Count from triggering player";
			prefix = "(328)";
		}

		329
		{
			title = "Ideya Capture Touch - Each Time";
			flags2text = "[1] Mare >= Front X Offset";
			flags8text = "[3] Run regardless of spheres";
			flags16text = "[4] Count from lowest of players";
			flags32text = "[5] Lap <= Front Y Offset";
			flags64text = "[6] Mare <= Front X Offset";
			flags128text = "[7] Lap >= Front Y Offset";
			flags256text = "[8] Count laps from Bonus Time";
			flags512text = "[9] Count from triggering player";
			flags16384text = "[14] Only if not enough spheres";
			flags32768text = "[15] Run when entering Capture";
			prefix = "(329)";
		}

		330
		{
			title = "Ideya Capture Touch - Once";
			flags2text = "[1] Mare >= Front X Offset";
			flags8text = "[3] Run regardless of spheres";
			flags16text = "[4] Count from lowest of players";
			flags32text = "[5] Lap <= Front Y Offset";
			flags64text = "[6] Mare <= Front X Offset";
			flags128text = "[7] Lap >= Front Y Offset";
			flags256text = "[8] Count laps from Bonus Time";
			flags512text = "[9] Count from triggering player";
			flags16384text = "[14] Only if not enough spheres";
			flags32768text = "[15] Run when entering Capture";
			prefix = "(330)";
		}

		331
		{
			title = "Player Skin - Continuous";
			flags64text = "[6] Disable for this skin";
			prefix = "(331)";
		}

		332
		{
			title = "Player Skin - Each Time";
			flags64text = "[6] Disable for this skin";
			prefix = "(332)";
		}

		333
		{
			title = "Player Skin - Once";
			flags64text = "[6] Disable for this skin";
			prefix = "(333)";
		}

		399
		{
			title = "Level Load";
			prefix = "(399)";
		}
	}

	linedefexecsector
	{
		title = "Linedef Executor (sector)";

		400
		{
			title = "Set Tagged Sector's Floor Height/Texture";
			prefix = "(400)";
			flags8text = "[3] Set delay by backside sector";
			flags64text = "[6] Keep floor flat";
		}

		401
		{
			title = "Set Tagged Sector's Ceiling Height/Texture";
			prefix = "(401)";
			flags8text = "[3] Set delay by backside sector";
		}

		402
		{
			title = "Set Tagged Sector's Light Level";
			prefix = "(402)";
			flags8text = "[3] Set delay by backside sector";
		}

		409
		{
			title = "Change Tagged Sector's Tag";
			prefix = "(409)";
			flags8text = "[3] Set delay by backside sector";
		}

		410
		{
			title = "Change Front Sector's Tag";
			prefix = "(410)";
			flags8text = "[3] Set delay by backside sector";
		}

		416
		{
			title = "Start Adjustable Flickering Light";
			prefix = "(416)";
			flags8text = "[3] Set delay by backside sector";
			flags64text = "[6] Second level from back";
		}

		417
		{
			title = "Start Adjustable Pulsating Light";
			prefix = "(417)";
			flags8text = "[3] Set delay by backside sector";
			flags64text = "[6] Second level from back";
		}

		418
		{
			title = "Start Adjustable Blinking Light (unsynchronized)";
			prefix = "(418)";
			flags8text = "[3] Set delay by backside sector";
			flags64text = "[6] Second level from back";
		}

		419
		{
			title = "Start Adjustable Blinking Light (synchronized)";
			prefix = "(419)";
			flags8text = "[3] Set delay by backside sector";
			flags64text = "[6] Second level from back";
		}

		420
		{
			title = "Fade Light Level";
			prefix = "(420)";
			flags8text = "[3] Set delay by backside sector";
			flags16text = "[4] Set params by X/Y offsets";
			flags512text = "[9] Speed = Tic Duration";
			flags1024text = "[10] Override existing fade";
		}

		421
		{
			title = "Stop Lighting Effect";
			prefix = "(421)";
			flags8text = "[3] Set delay by backside sector";
		}

		435
		{
			title = "Change Plane Scroller Direction";
			prefix = "(435)";
			flags8text = "[3] Set delay by backside sector";
		}
	}

	linedefexecplane
	{
		title = "Linedef Executor (plane movement)";

		403
		{
			title = "Move Tagged Sector's Floor";
			prefix = "(403)";
			flags2text = "[1] Trigger linedef executor";
			flags8text = "[3] Set delay by backside sector";
			flags64text = "[6] Change floor flat";
		}

		404
		{
			title = "Move Tagged Sector's Ceiling";
			prefix = "(404)";
			flags2text = "[1] Trigger linedef executor";
			flags8text = "[3] Set delay by backside sector";
			flags64text = "[6] Change ceiling flat";
		}

		405
		{
			title = "Move Floor According to Front Texture Offsets";
			prefix = "(405)";
			flags8text = "[3] Set delay by backside sector";
			flags64text = "[6] Move instantly";
		}

		407
		{
			title = "Move Ceiling According to Front Texture Offsets";
			prefix = "(407)";
			flags8text = "[3] Set delay by backside sector";
			flags64text = "[6] Move instantly";
		}

		411
		{
			title = "Stop Plane Movement";
			prefix = "(411)";
			flags8text = "[3] Set delay by backside sector";
		}

		428
		{
			title = "Start Platform Movement";
			prefix = "(428)";
			flags8text = "[3] Set delay by backside sector";
			flags64text = "[6] Move upwards at start";
		}

		429
		{
			title = "Crush Ceiling Once";
			prefix = "(429)";
			flags8text = "[3] Set delay by backside sector";
			flags512text = "[9] Double, constant speed";
		}

		430
		{
			title = "Crush Floor Once";
			prefix = "(430)";
			flags8text = "[3] Set delay by backside sector";
		}

		431
		{
			title = "Crush Floor and Ceiling Once";
			prefix = "(431)";
			flags8text = "[3] Set delay by backside sector";
			flags512text = "[9] Double, constant speed";
		}
	}

	linedefexecplayer
	{
		title = "Linedef Executor (player/object)";

		412
		{
			title = "Teleporter";
			prefix = "(412)";
			flags2text = "[1] Silent";
			flags8text = "[3] Set delay by backside sector";
			flags64text = "[6] Retain angle";
			flags256text = "[8] Relative, silent";
			flags512text = "[9] Retain momentum";
		}

		425
		{
			title = "Change Object State";
			prefix = "(425)";
			flags8text = "[3] Set delay by backside sector";
		}

		426
		{
			title = "Stop Object";
			prefix = "(426)";
			flags8text = "[3] Set delay by backside sector";
			flags64text = "[6] Teleport to sector center";
		}

		427
		{
			title = "Award Score";
			prefix = "(427)";
			flags8text = "[3] Set delay by backside sector";
		}

		432
		{
			title = "Enable/Disable 2D Mode";
			prefix = "(432)";
			flags8text = "[3] Set delay by backside sector";
			flags64text = "[6] Return to 3D";
		}

		433
		{
			title = "Enable/Disable Gravity Flip";
			prefix = "(433)";
			flags8text = "[3] Set delay by backside sector";
			flags64text = "[6] Return to normal";
		}

		434
		{
			title = "Award Power-Up";
			prefix = "(434)";
			flags2text = "[1] Use back upper texture";
			flags8text = "[3] Set delay by backside sector";
			flags64text = "[6] No time limit";
		}

		437
		{
			title = "Disable Player Control";
			prefix = "(437)";
			flags8text = "[3] Set delay by backside sector";
			flags64text = "[6] Allow jumping";
		}

		438
		{
			title = "Change Object Size";
			prefix = "(438)";
			flags8text = "[3] Set delay by backside sector";
		}

		442
		{
			title = "Change Object Type State";
			prefix = "(442)";
			flags8text = "[3] Set delay by backside sector";
		}

		457
		{
			title = "Track Object's Angle";
			prefix = "(457)";
			flags8text = "[3] Set delay by backside sector";
			flags128text = "[7] Don't stop after first fail";
		}

		458
		{
			title = "Stop Tracking Object's Angle";
			prefix = "(458)";
			flags8text = "[3] Set delay by backside sector";
		}

		460
		{
			title = "Award Rings";
			prefix = "(460)";
		}

		461
		{
			title = "Spawn Object";
			prefix = "(461)";
			flags64text = "[6] Spawn inside a range";
		}

		462
		{
			title = "Stop Timer/Exit Stage in Record Attack";
			prefix = "(462)";
		}
	}

	linedefexecmisc
	{
		title = "Linedef Executor (misc.)";

		413
		{
			title = "Change Music";
			prefix = "(413)";
			flags2text = "[1] Keep after death";
			flags8text = "[3] Set delay by backside sector";
			flags32text = "[5] Seek to current song position";
			flags64text = "[6] For everyone";
			flags128text = "[7] Fade to custom volume";
			flags512text = "[9] Don't loop";
			flags16384text = "[14] Force music reload";
		}

		414
		{
			title = "Play Sound Effect";
			prefix = "(414)";
			flags2text = "[1] From calling sector";
			flags8text = "[3] Set delay by backside sector";
			flags64text = "[6] From nowhere for triggerer";
			flags512text = "[9] For everyone";
			flags1024text = "[10] From tagged sectors";
		}

		415
		{
			title = "Run Script";
			prefix = "(415)";
			flags8text = "[3] Set delay by backside sector";
		}

		422
		{
			title = "Switch to Cut-Away View";
			prefix = "(422)";
			flags8text = "[3] Set delay by backside sector";
			flags64text = "[6] Adjust pitch";
		}

		423
		{
			title = "Change Sky";
			prefix = "(423)";
			flags8text = "[3] Set delay by backside sector";
			flags64text = "[6] For everyone";
		}

		424
		{
			title = "Change Weather";
			prefix = "(424)";
			flags8text = "[3] Set delay by backside sector";
			flags64text = "[6] For everyone";
		}

		436
		{
			title = "Shatter FOF";
			prefix = "(436)";
			flags8text = "[3] Set delay by backside sector";
		}

		439
		{
			title = "Change Tagged Linedef's Textures";
			prefix = "(439)";
			flags8text = "[3] Set delay by backside sector";
			flags64text = "[6] Only existing";
		}

		440
		{
			title = "Start Metal Sonic Race";
			prefix = "(440)";
			flags8text = "[3] Set delay by backside sector";
		}

		441
		{
			title = "Condition Set Trigger";
			prefix = "(441)";
			flags8text = "[3] Set delay by backside sector";
		}

		443
		{
			title = "Call Lua Function";
			prefix = "(443)";
			flags8text = "[3] Set delay by backside sector";
		}

		444
		{
			title = "Earthquake";
			prefix = "(444)";
			flags8text = "[3] Set delay by backside sector";
		}


		445
		{
			title = "Make FOF Disappear/Reappear";
			prefix = "(445)";
			flags8text = "[3] Set delay by backside sector";
			flags64text = "[6] Reappear";
		}

		446
		{
			title = "Make FOF Crumble";
			prefix = "(446)";
			flags2text = "[1] Flags determine respawn";
			flags8text = "[3] Set delay by backside sector";
			flags64text = "[6] Don't respawn";
		}

		447
		{
			title = "Change Tagged Sector's Colormap";
			prefix = "(447)";
			flags8text = "[3] Set delay by backside sector";
			flags16text = "[4] Front X/Y = Alpha";
			flags32text = "[5] Subtract Red value";
			flags64text = "[6] Subtract Green value";
			flags128text = "[7] Subtract Blue value";
			flags256text = "[8] Calc relative values";
			flags32768text = "[15] Use back side colormap";
		}

		448
		{
			title = "Change Skybox";
			prefix = "(448)";
			flags2text = "[1] Change centerpoint";
			flags8text = "[3] Set delay by backside sector";
			flags64text = "[6] For everyone";
			flags512text = "[9] Don't change viewpoint";
		}

		450
		{
			title = "Execute Linedef Executor (specific tag)";
			prefix = "(450)";
			flags8text = "[3] Set delay by backside sector";
		}

		451
		{
			title = "Execute Linedef Executor (random tag in range)";
			prefix = "(451)";
			flags8text = "[3] Set delay by backside sector";
		}

		452
		{
			title = "Set FOF Translucency";
			prefix = "(452)";
			flags8text = "[3] Set delay by backside sector";
			flags64text = "[6] Do not handle FF_TRANS";
			flags256text = "[8] Set relative to current val";
		}

		453
		{
			title = "Fade FOF";
			prefix = "(453)";
			flags2text = "[1] Do not handle FF_EXISTS";
			flags8text = "[3] Set delay by backside sector";
			flags32text = "[5] No collision during fade";
			flags64text = "[6] Do not handle FF_TRANS";
			flags128text = "[7] Do not handle lighting";
			flags256text = "[8] Set relative to current val";
			flags512text = "[9] Speed = Tic Duration";
			flags1024text = "[10] Override existing fade";
			flags16384text = "[14] Do not handle collision";
			flags32768text = "[15] Use exact alpha in OGL";
		}

		454
		{
			title = "Stop Fading FOF";
			prefix = "(454)";
			flags2text = "[1] Do not finalize collision";
			flags8text = "[3] Set delay by backside sector";
		}

		455
		{
			title = "Fade Tagged Sector's Colormap";
			prefix = "(455)";
			flags8text = "[3] Set delay by backside sector";
			flags16text = "[4] Front X/Y = Alpha";
			flags32text = "[5] Subtract Red value";
			flags64text = "[6] Subtract Green value";
			flags128text = "[7] Subtract Blue value";
			flags256text = "[8] Calc relative values";
			flags512text = "[9] Speed = Tic Duration";
			flags1024text = "[10] Override existing fade";
			flags16384text = "[14] Fade from invisible black";
			flags32768text = "[15] Use back side colormap";
		}

		456
		{
			title = "Stop Fading Tagged Sector's Colormap";
			prefix = "(456)";
			flags8text = "[3] Set delay by backside sector";
		}

		459
		{
			title = "Control Text Prompt";
			prefix = "(459)";
			flags2text = "[1] Close text prompt";
			flags8text = "[3] Set delay by backside sector";
			flags32text = "[5] Run executor tag on close";
			flags64text = "[6] For everyone";
			flags128text = "[7] Do not block controls";
			flags256text = "[8] Do not freeze time";
			flags32768text = "[15] Find prompt by name";
		}
	}

	linedefexecpoly
	{
		title = "Linedef Executor (polyobject)";

		480
		{
			title = "Door Slide";
			prefix = "(480)";
			flags8text = "[3] Set delay by backside sector";
		}

		481
		{
			title = "Door Swing";
			prefix = "(481)";
			flags8text = "[3] Set delay by backside sector";
		}

		482
		{
			title = "Move";
			prefix = "(482)";
			flags8text = "[3] Set delay by backside sector";
		}

		483
		{
			title = "Move, Override";
			prefix = "(483)";
			flags8text = "[3] Set delay by backside sector";
		}

		484
		{
			title = "Rotate Right";
			prefix = "(484)";
			flags8text = "[3] Set delay by backside sector";
			flags64text = "[6] Don't turn players";
			flags512text = "[9] Turn all objects";
		}

		485
		{
			title = "Rotate Right, Override";
			prefix = "(485)";
			flags8text = "[3] Set delay by backside sector";
			flags64text = "[6] Don't turn players";
			flags512text = "[9] Turn all objects";
		}

		486
		{
			title = "Rotate Left";
			prefix = "(486)";
			flags8text = "[3] Set delay by backside sector";
			flags64text = "[6] Don't turn players";
			flags512text = "[9] Turn all objects";
		}

		487
		{
			title = "Rotate Left, Override";
			prefix = "(487)";
			flags8text = "[3] Set delay by backside sector";
			flags64text = "[6] Don't turn players";
			flags512text = "[9] Turn all objects";
		}

		488
		{
			title = "Move by Waypoints";
			prefix = "(488)";
			flags8text = "[3] Set delay by backside sector";
			flags32text = "[5] Reverse order";
			flags128text = "[7] There and back";
			flags256text = "[8] Return when done";
			flags512text = "[9] Loop movement";
		}

		489
		{
			title = "Turn Invisible, Intangible";
			prefix = "(489)";
			flags8text = "[3] Set delay by backside sector";
			flags64text = "[6] Only invisible";
		}

		490
		{
			title = "Turn Visible, Tangible";
			prefix = "(490)";
			flags8text = "[3] Set delay by backside sector";
			flags64text = "[6] Only visible";
		}

		491
		{
			title = "Set Translucency";
			prefix = "(491)";
			flags8text = "[3] Set delay by backside sector";
			flags16text = "[4] Set raw alpha by Front X";
			flags256text = "[8] Calc relative values";
		}

		492
		{
			title = "Fade Translucency";
			prefix = "(492)";
			flags8text = "[3] Set delay by backside sector";
			flags16text = "[4] Set raw alpha by Front X";
			flags32text = "[5] No collision during fade";
			flags256text = "[8] Calc relative values";
			flags512text = "[9] Speed = Tic Duration";
			flags1024text = "[10] Override existing fade";
			flags16384text = "[14] Do not handle collision";
		}
	}

	wallscroll
	{
		title = "Wall Scrolling";

		500
		{
			title = "Scroll Wall Front Side Left";
			prefix = "(500)";
		}

		501
		{
			title = "Scroll Wall Front Side Right";
			prefix = "(501)";
		}

		502
		{
			title = "Scroll Wall According to Linedef";
			prefix = "(502)";
		}

		503
		{
			title = "Scroll Wall According to Linedef (Accelerative)";
			prefix = "(503)";
		}

		504
		{
			title = "Scroll Wall According to Linedef (Displacement)";
			prefix = "(504)";
		}

		505
		{
			title = "Scroll Texture by Front Side Offsets";
			prefix = "(505)";
		}

		506
		{
			title = "Scroll Texture by Back Side Offsets";
			prefix = "(506)";
		}
	}

	planescroll
	{
		title = "Plane Scrolling";

		510
		{
			title = "Scroll Floor Texture";
			prefix = "(510)";
		}

		511
		{
			title = "Scroll Floor Texture (Accelerative)";
			prefix = "(511)";
		}

		512
		{
			title = "Scroll Floor Texture (Displacement)";
			prefix = "(512)";
		}

		513
		{
			title = "Scroll Ceiling Texture";
			prefix = "(513)";
		}

		514
		{
			title = "Scroll Ceiling Texture (Accelerative)";
			prefix = "(514)";
		}

		515
		{
			title = "Scroll Ceiling Texture (Displacement)";
			prefix = "(515)";
		}

		520
		{
			title = "Carry Objects on Floor";
			prefix = "(520)";
		}

		521
		{
			title = "Carry Objects on Floor (Accelerative)";
			prefix = "(521)";
			flags64text = "[6] Even across edges";
		}

		522
		{
			title = "Carry Objects on Floor (Displacement)";
			prefix = "(522)";
		}

		523
		{
			title = "Carry Objects on Ceiling";
			prefix = "(523)";
			flags64text = "[6] Even across edges";
		}

		524
		{
			title = "Carry Objects on Ceiling (Accelerative)";
			prefix = "(524)";
		}

		525
		{
			title = "Carry Objects on Ceiling (Displacement)";
			prefix = "(525)";
		}

		530
		{
			title = "Scroll Floor Texture and Carry Objects";
			prefix = "(530)";
			flags64text = "[6] Even across edges";
		}

		531
		{
			title = "Scroll Floor Texture and Carry Objects (Accelerative)";
			prefix = "(531)";
		}

		532
		{
			title = "Scroll Floor Texture and Carry Objects (Displacement)";
			prefix = "(532)";
		}

		533
		{
			title = "Scroll Ceiling Texture and Carry Objects";
			prefix = "(533)";
			flags64text = "[6] Even across edges";
		}

		534
		{
			title = "Scroll Ceiling Texture and Carry Objects (Accelerative)";
			prefix = "(534)";
		}

		535
		{
			title = "Scroll Ceiling Texture and Carry Objects (Displacement)";
			prefix = "(535)";
		}
	}

	pusher
	{
		title = "Pusher";

		541
		{
			title = "Wind";
			prefix = "(541)";
			flags512text = "[9] Player slides";
			flags64text = "[6] Even across edges";
		}

		542
		{
			title = "Upwards Wind";
			prefix = "(542)";
			flags512text = "[9] Player slides";
			flags64text = "[6] Even across edges";
		}

		543
		{
			title = "Downwards Wind";
			prefix = "(543)";
			flags512text = "[9] Player slides";
			flags64text = "[6] Even across edges";
		}

		544
		{
			title = "Current";
			prefix = "(544)";
			flags512text = "[9] Player slides";
			flags64text = "[6] Even across edges";
		}

		545
		{
			title = "Upwards Current";
			prefix = "(545)";
			flags512text = "[9] Player slides";
			flags64text = "[6] Even across edges";
		}

		546
		{
			title = "Downwards Current";
			prefix = "(546)";
			flags512text = "[9] Player slides";
			flags64text = "[6] Even across edges";
		}

		547
		{
			title = "Push/Pull";
			prefix = "(547)";
		}
	}

	light
	{
		title = "Lighting";

		600
		{
			title = "Floor Lighting";
			prefix = "(600)";
		}

		601
		{
			title = "Ceiling Lighting";
			prefix = "(601)";
		}

		602
		{
			title = "Adjustable Pulsating Light";
			prefix = "(602)";
		}

		603
		{
			title = "Adjustable Flickering Light";
			prefix = "(603)";
		}

		604
		{
			title = "Adjustable Blinking Light (unsynchronized)";
			prefix = "(604)";
		}

		605
		{
			title = "Adjustable Blinking Light (synchronized)";
			prefix = "(605)";
		}

		606
		{
			title = "Colormap";
			prefix = "(606)";
		}
	}

	slope
	{
		title = "Slope";

		700
		{
			title = "Slope Frontside Floor";
			prefix = "(700)";
			flags2048text = "[11] No physics";
			flags4096text = "[12] Dynamic";
			slope = "regular";
			slopeargs = 1;
		}

		701
		{
			title = "Slope Frontside Ceiling";
			prefix = "(701)";
			flags2048text = "[11] No physics";
			flags4096text = "[12] Dynamic";
			slope = "regular";
			slopeargs = 2;
		}

		702
		{
			title = "Slope Frontside Floor and Ceiling";
			prefix = "(702)";
			flags2048text = "[11] No physics";
			flags4096text = "[12] Dynamic";
			slope = "regular";
			slopeargs = 3;
		}

		703
		{
			title = "Slope Frontside Floor and Backside Ceiling";
			prefix = "(703)";
			flags2048text = "[11] No physics";
			flags4096text = "[12] Dynamic";
			slope = "regular";
			slopeargs = 9;
		}

		704
		{
			title = "Slope Frontside Floor by 3 Tagged Vertex Things";
			prefix = "(704)";
			flags2048text = "[11] No physics";
			flags4096text = "[12] Dynamic";
			flags8192text = "[13] Use tag and offsets";
			slope = "vertex";
			slopeargs = 0;
		}

		705
		{
			title = "Slope Frontside Ceiling by 3 Tagged Vertex Things";
			prefix = "(705)";
			flags2048text = "[11] No physics";
			flags4096text = "[12] Dynamic";
			flags8192text = "[13] Use tag and offsets";
			slope = "vertex";
			slopeargs = 1;
		}

		710
		{
			title = "Slope Backside Floor";
			prefix = "(710)";
			flags2048text = "[11] No physics";
			flags4096text = "[12] Dynamic";
			slope = "regular";
			slopeargs = 4;
		}

		711
		{
			title = "Slope Backside Ceiling";
			prefix = "(711)";
			flags2048text = "[11] No physics";
			flags4096text = "[12] Dynamic";
			slope = "regular";
			slopeargs = 8;
		}

		712
		{
			title = "Slope Backside Floor and Ceiling";
			prefix = "(712)";
			flags2048text = "[11] No physics";
			flags4096text = "[12] Dynamic";
			slope = "regular";
			slopeargs = 12;
		}

		713
		{
			title = "Slope Backside Floor and Frontside Ceiling";
			prefix = "(713)";
			flags2048text = "[11] No physics";
			flags4096text = "[12] Dynamic";
			slope = "regular";
			slopeargs = 6;
		}

		714
		{
			title = "Slope Backside Floor by 3 Tagged Vertex Things";
			prefix = "(714)";
			flags2048text = "[11] No physics";
			flags4096text = "[12] Dynamic";
			flags8192text = "[13] Use tag and offsets";
			slope = "vertex";
			slopeargs = 2;
		}

		715
		{
			title = "Slope Backside Ceiling by 3 Tagged Vertex Things";
			prefix = "(715)";
			flags2048text = "[11] No physics";
			flags4096text = "[12] Dynamic";
			flags8192text = "[13] Use tag and offsets";
			slope = "vertex";
			slopeargs = 3;
		}

		720
		{
			title = "Copy Frontside Floor Slope from Line Tag";
			prefix = "(720)";
			slope = "copy";
			slopeargs = 1;
		}

		721
		{
			title = "Copy Frontside Ceiling Slope from Line Tag";
			prefix = "(721)";
			slope = "copy";
			slopeargs = 2;
		}

		722
		{
			title = "Copy Frontside Floor and Ceiling Slope from Line Tag";
			prefix = "(722)";
			slope = "copy";
			slopeargs = 3;
		}

		799
		{
			title = "Set Tagged Dynamic Slope Vertex to Front Sector Height";
			prefix = "(799)";
		}
	}

	transwall
	{
		title = "Translucent Wall";

		900
		{
			title = "90% Opaque";
			prefix = "(900)";
		}

		901
		{
			title = "80% Opaque";
			prefix = "(901)";
		}

		902
		{
			title = "70% Opaque";
			prefix = "(902)";
		}

		903
		{
			title = "60% Opaque";
			prefix = "(903)";
		}

		904
		{
			title = "50% Opaque";
			prefix = "(904)";
		}

		905
		{
			title = "40% Opaque";
			prefix = "(905)";
		}

		906
		{
			title = "30% Opaque";
			prefix = "(906)";
		}

		907
		{
			title = "20% Opaque";
			prefix = "(907)";
		}

		908
		{
			title = "10% Opaque";
			prefix = "(908)";
		}

		909
		{
			title = "Fog Wall";
			prefix = "(909)";
		}
	}
}

udmf
{
	misc
	{
		title = "Miscellaneous";

		0
		{
			title = "None";
			prefix = "(0)";
		}
	}
}