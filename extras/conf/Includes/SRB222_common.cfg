common
{
	// Some common settings



	// Default testing parameters
	testparameters = "-file \"%AP\" \"%F\" -warp %L";
	testshortpaths = true;

	// Action special help (mxd)
	actionspecialhelp = "https://wiki.srb2.org/wiki/Linedef_type_%K";

	// Default nodebuilder configurations
	defaultsavecompiler = "zennode_normal";
	defaulttestcompiler = "zennode_fast";

	// Generalized actions
	generalizedlinedefs = false;
	generalizedsectors = true;

	mixtexturesflats = true;
	defaulttexturescale = 1.0f;
	defaultflatscale = 1.0f;
	scaledtextureoffsets = true;

	// Thing number for start position in 3D Mode
	start3dmode = 3328;

	// Texture sources
	textures
	{
		include("SRB222_misc.cfg", "textures");
	}

	// Patch sources
	patches
	{
		include("SRB222_misc.cfg", "patches");
	}

	// Sprite sources
	sprites
	{
		include("SRB222_misc.cfg", "sprites");
	}

	// Flat sources
	flats
	{
		include("SRB222_misc.cfg", "flats");
	}
}

mapformat_doom
{
	// The format interface handles the map data format - DoomMapSetIO for SRB2DB2, SRB2MapSetIO for Zone Builder
	formatinterface = "SRB2MapSetIO";

	/*
	GAME DETECT PATTERN
	Used to guess the game for which a WAD file is made.

	1 = One of these lumps must exist
	2 = None of these lumps must exist
	3 = All of these lumps must exist
	*/

	gamedetect
	{
		EXTENDED = 2;


		BEHAVIOR = 2;

		E#M# = 2;

		MAP?? = 1;
	}

	/*
	MAP LUMP NAMES
	Map lumps are loaded with the map as long as they are right after each other. When the editor
	meets a lump which is not defined in this list it will ignore the map if not satisfied.
	The order of items defines the order in which lumps will be written to WAD file on save.
	To indicate the map header lump, use ~MAP

	Legenda:
	required = Lump is required to exist.
	blindcopy = Lump will be copied along with the map blindly. (usefull for lumps Doom Builder doesn't use)
	nodebuild = The nodebuilder generates this lump.
	allowempty = The nodebuilder is allowed to leave this lump empty.
	script = This lump is a text-based script. Specify the filename of the script configuration to use.
	*/

	maplumpnames
	{
		include("SRB222_misc.cfg", "doommaplumpnames");
	}

	// When this is set to true, sectors with the same tag will light up when a line is highlighted
	linetagindicatesectors = true;

	// Special linedefs
	include("SRB222_misc.cfg", "speciallinedefs");

	// Default flags for first new thing (As far as 2.2 goes, they're empty just like in 2.1)
	defaultthingflags
	{
	}

	// DEFAULT SECTOR BRIGHTNESS LEVELS
	sectorbrightness
	{
		include("SRB222_misc.cfg", "sectorbrightness");
	}

	// SECTOR TYPES-----------------------------------------------------------------
	sectortypes
	{
		include("SRB222_sectors.cfg", "sectortypes");
	}

	// GENERALISED SECTOR TYPES-----------------------------------------------------------------
	gen_sectortypes
	{
		include("SRB222_sectors.cfg", "gen_sectortypes");
	}

	// LINEDEF FLAGS
	linedefflags
	{
		include("SRB222_misc.cfg", "linedefflags");
	}

	// Linedef flags UDMF translation table
	// This is needed for copy/paste and prefabs to work properly
	// When the UDMF field name is prefixed with ! it is inverted
	linedefflagstranslation
	{
		include("SRB222_misc.cfg", "linedefflagstranslation");
	}

	// LINEDEF ACTIVATIONS
	linedefactivations
	{
	}

	// LINEDEF TYPES
	linedeftypes
	{
		include("SRB222_linedefs.cfg", "doom");
	}

	// THING FLAGS
	thingflags
	{
		include("SRB222_misc.cfg", "thingflags");
	}

	// Thing flags UDMF translation table
	// This is needed for copy/paste and prefabs to work properly
	// When the UDMF field name is prefixed with ! it is inverted
	thingflagstranslation
	{
		include("SRB222_misc.cfg", "thingflagstranslation");
	}

	// THING FLAGS ERROR MASK
	// Mask for the thing flags which indicates the options
	// that make the same thing appear in the same modes
	thingflagsmask1 = 7;	// 1 + 2 + 4
	thingflagsmask2 = 0;
}

mapformat_udmf
{
	// The format interface handles the map data format
	formatinterface = "UniversalMapSetIO";

	// Enables support for long (> 8 chars) texture names
	// WARNING: this should only be enabled for UDMF game configurations!
	// WARNING: enabling this will make maps incompatible with Doom Builder 2 and can lead to problems in Slade 3!
	longtexturenames = false;

	// Default nodebuilder configurations
	defaultsavecompiler = "zdbsp_udmf_normal";
	defaulttestcompiler = "zdbsp_udmf_fast";

	engine = "srb2"; // override that so that DB2 uses the correct namespace

	maplumpnames
	{
		include("UDMF_misc.cfg", "udmfmaplumpnames_begin");
		include("SRB222_misc.cfg", "udmfmaplumpnames");
		include("UDMF_misc.cfg", "udmfmaplumpnames_end");
	}

	universalfields
	{
//		include("SRB222_misc.cfg", "universalfields");
	}

	// When this is set to true, sectors with the same tag will light up when a line is highlighted
	linetagindicatesectors = false;

	// Special linedefs
	include("SRB222_misc.cfg", "speciallinedefs_udmf");

	// Default flags for first new thing (As far as 2.2 goes, they're empty just like in 2.1)
	defaultthingflags
	{
	}

	// Generalized actions
	generalizedlinedefs = false;

	// SECTOR FLAGS
	sectorflags
	{
//		include("SRB222_misc.cfg", "sectorflags");
	}

	// DEFAULT SECTOR BRIGHTNESS LEVELS
	sectorbrightness
	{
		include("SRB222_misc.cfg", "sectorbrightness");
	}

	// SECTOR TYPES
	sectortypes
	{
		include("SRB222_sectors.cfg", "sectortypes");
	}

	// SECTOR RENSERSTYLES
/*	sectorrenderstyles
	{
		include("SRB222_misc.cfg", "sectorrenderstyles");
	}*/

	// LINEDEF FLAGS
	linedefflags
	{
		include("SRB222_misc.cfg", "linedefflags_udmf");
	}

	// LINEDEF ACTIVATIONS
	linedefactivations
	{
		include("SRB222_misc.cfg", "linedefactivations_udmf");
	}

	linedefflagstranslation
	{
	}


	// LINEDEF RENSERSTYLES
	linedefrenderstyles
	{
		include("SRB222_misc.cfg", "linedefrenderstyles");
	}

	//SIDEDEF FLAGS
/*	sidedefflags
	{
		include("UDMF_misc.cfg", "sidedefflags");
	}*/

	// THING FLAGS
	thingflags
	{
		include("SRB222_misc.cfg", "thingflags_udmf");
	}

	// Thing flags UDMF translation table
	// This is needed for copy/paste and prefabs to work properly
	// When the UDMF field name is prefixed with ! it is inverted
	thingflagstranslation
	{
		include("SRB222_misc.cfg", "thingflagstranslation");
	}

	// THING RENSERSTYLES
/*	thingrenderstyles
	{
		include("SRB222_misc.cfg", "thingrenderstyles");
	}*/

	// How to compare thing flags (for the stuck things error checker)
/*	thingflagscompare
	{
		include("UDMF_misc.cfg", "thingflagscompare");
	}*/

	//mxd. Thing flags UDMF translation table
	// This is needed for copy/paste and prefabs to work properly
	// When the UDMF field name is prefixed with ! it is inverted
	thingflagstranslation
	{
	}

	// LINEDEF TYPES
	linedeftypes
	{
		include("SRB222_linedefs.cfg", "udmf");
	}
}