# Travis-CI Config
#
# You may use the Deployer to upload packages and builds to external servers.
# See travis/deployer.sh for environment variables to configure.

language: c
sudo: required
dist: trusty

matrix:
    include:
        - os: linux
          addons:
            apt:
              packages:
              - libsdl2-mixer-dev
              - libpng-dev
              - libgl1-mesa-dev
              - libgme-dev
              - p7zip-full
              - gcc-4.4
          compiler: gcc-4.4
          if: env(DPL_ENABLED) != "1" OR branch NOT IN (env(DPL_BRANCHES)) OR env(DPL_TERMINATE_TESTS) != "1"
          #gcc-4.4 (Ubuntu/Linaro 4.4.7-8ubuntu1) 4.4.7
        - os: linux
          addons:
            apt:
              packages:
              - libsdl2-mixer-dev
              - libpng-dev
              - libgl1-mesa-dev
              - libgme-dev
              - p7zip-full
              - gcc-4.6
          compiler: gcc-4.6
          if: env(DPL_ENABLED) != "1" OR branch NOT IN (env(DPL_BRANCHES)) OR env(DPL_TERMINATE_TESTS) != "1"
          #gcc-4.6 (Ubuntu/Linaro 4.6.4-6ubuntu2) 4.6.4
        - os: linux
          addons:
            apt:
              packages:
              - libsdl2-mixer-dev
              - libpng-dev
              - libgl1-mesa-dev
              - libgme-dev
              - p7zip-full
              - gcc-4.7
          compiler: gcc-4.7
          if: env(DPL_ENABLED) != "1" OR branch NOT IN (env(DPL_BRANCHES)) OR env(DPL_TERMINATE_TESTS) != "1"
          #gcc-4.7
        - os: linux
          compiler: gcc
          if: env(DPL_ENABLED) != "1" OR branch NOT IN (env(DPL_BRANCHES)) OR env(DPL_TERMINATE_TESTS) != "1"
          #gcc (Ubuntu 4.8.4-2ubuntu1~14.04) 4.8.4
        - os: linux
          addons:
            apt:
              sources:
              - ubuntu-toolchain-r-test
              packages:
              - libsdl2-mixer-dev
              - libpng-dev
              - libgl1-mesa-dev
              - libgme-dev
              - p7zip-full
              - gcc-4.8
          compiler: gcc-4.8
          if: env(DPL_ENABLED) != "1" OR branch NOT IN (env(DPL_BRANCHES)) OR env(DPL_TERMINATE_TESTS) != "1"
          #gcc-4.8 (Ubuntu 4.8.5-2ubuntu1~14.04.1) 4.8.5
        - os: linux
          addons:
            apt:
              sources:
              - ubuntu-toolchain-r-test
              packages:
              - libsdl2-mixer-dev
              - libpng-dev
              - libgl1-mesa-dev
              - libgme-dev
              - p7zip-full
              - gcc-7
          compiler: gcc-7
          env: WFLAGS="-Wno-tautological-compare -Wno-error=implicit-fallthrough -Wno-implicit-fallthrough"
          if: env(DPL_ENABLED) != "1" OR branch NOT IN (env(DPL_BRANCHES)) OR env(DPL_TERMINATE_TESTS) != "1"
          #gcc-7 (Ubuntu 7.2.0-1ubuntu1~14.04) 7.2.0 20170802
        - os: linux
          addons:
            apt:
              sources:
              - ubuntu-toolchain-r-test
              packages:
              - libsdl2-mixer-dev
              - libpng-dev
              - libgl1-mesa-dev
              - libgme-dev
              - p7zip-full
              - gcc-8
          compiler: gcc-8
          env: WFLAGS="-Wno-tautological-compare -Wno-error=implicit-fallthrough -Wno-implicit-fallthrough -Wno-error=format-overflow"
          if: env(DPL_ENABLED) != "1" OR branch NOT IN (env(DPL_BRANCHES)) OR env(DPL_TERMINATE_TESTS) != "1"
          #gcc-8 (Ubuntu 7.2.0-1ubuntu1~14.04) 8.1.0
        - os: linux
          compiler: clang
          if: env(DPL_ENABLED) != "1" OR branch NOT IN (env(DPL_BRANCHES)) OR env(DPL_TERMINATE_TESTS) != "1"
          #clang version 3.5.0 (tags/RELEASE_350/final)
        - os: linux
          addons:
            apt:
              sources:
              - llvm-toolchain-precise-3.5
              packages:
              - libsdl2-mixer-dev
              - libpng-dev
              - libgl1-mesa-dev
              - libgme-dev
              - p7zip-full
              - clang-3.5
          compiler: clang-3.5
          if: env(DPL_ENABLED) != "1" OR branch NOT IN (env(DPL_BRANCHES)) OR env(DPL_TERMINATE_TESTS) != "1"
          #Ubuntu clang version 3.5.0-4ubuntu2~trusty2 (tags/RELEASE_350/final) (based on LLVM 3.5.0)
        - os: linux
          addons:
            apt:
              sources:
              - llvm-toolchain-precise-3.6
              - ubuntu-toolchain-r-test
              packages:
              - libsdl2-mixer-dev
              - libpng-dev
              - libgl1-mesa-dev
              - libgme-dev
              - p7zip-full
              - clang-3.6
          compiler: clang-3.6
          if: env(DPL_ENABLED) != "1" OR branch NOT IN (env(DPL_BRANCHES)) OR env(DPL_TERMINATE_TESTS) != "1"
          #Ubuntu clang version 3.6.2-svn240577-1~exp1 (branches/release_36) (based on LLVM 3.6.2)
        - os: linux
          addons:
            apt:
              sources:
              - llvm-toolchain-precise-3.7
              - ubuntu-toolchain-r-test
              packages:
              - libsdl2-mixer-dev
              - libpng-dev
              - libgl1-mesa-dev
              - libgme-dev
              - p7zip-full
              - clang-3.7
          compiler: clang-3.7
          if: env(DPL_ENABLED) != "1" OR branch NOT IN (env(DPL_BRANCHES)) OR env(DPL_TERMINATE_TESTS) != "1"
          #Ubuntu clang version 3.7.1-svn253571-1~exp1 (branches/release_37) (based on LLVM 3.7.1)
        - os: linux
          addons:
            apt:
              sources:
              - llvm-toolchain-precise-3.8
              - ubuntu-toolchain-r-test
              packages:
              - libsdl2-mixer-dev
              - libpng-dev
              - libgl1-mesa-dev
              - libgme-dev
              - p7zip-full
              - clang-3.8
          compiler: clang-3.8
          if: env(DPL_ENABLED) != "1" OR branch NOT IN (env(DPL_BRANCHES)) OR env(DPL_TERMINATE_TESTS) != "1"
          #clang version 3.8.1-svn271127-1~exp1 (branches/release_38)
        - os: linux
          addons:
            apt:
              sources:
              - llvm-toolchain-precise-3.9
              - ubuntu-toolchain-r-test
              packages:
              - libsdl2-mixer-dev
              - libpng-dev
              - libgl1-mesa-dev
              - libgme-dev
              - p7zip-full
              - clang-3.9
          compiler: clang-3.9
          if: env(DPL_ENABLED) != "1" OR branch NOT IN (env(DPL_BRANCHES)) OR env(DPL_TERMINATE_TESTS) != "1"
          #clang version 3.9.X
#        - os: linux
#          addons:
#            apt:
#              sources:
#              - llvm-toolchain-precise-4.0
#              - ubuntu-toolchain-r-test
#              packages:
#              - libsdl2-mixer-dev
#              - libpng-dev
#              - libgl1-mesa-dev
#              - libgme-dev
#              - p7zip-full
#              - clang-4.0
#          compiler: clang-4.0
#          if: env(DPL_ENABLED) != "1" OR branch NOT IN (env(DPL_BRANCHES)) OR env(DPL_TERMINATE_TESTS) != "1"
#          #clang version 4.0.X
#        - os: linux
#          addons:
#            apt:
#              sources:
#              - llvm-toolchain-precise-5.0
#              - ubuntu-toolchain-r-test
#              packages:
#              - libsdl2-mixer-dev
#              - libpng-dev
#              - libgl1-mesa-dev
#              - libgme-dev
#              - p7zip-full
#              - clang-5.0
#          compiler: clang-5.0
#          if: env(DPL_ENABLED) != "1" OR branch NOT IN (env(DPL_BRANCHES)) OR env(DPL_TERMINATE_TESTS) != "1"
#          #clang version 5.0.X
#        - os: osx
#          osx_image: beta-xcode6.1
#          if: env(DPL_ENABLED) != "1" OR branch NOT IN (env(DPL_BRANCHES)) OR env(DPL_TERMINATE_TESTS) != "1"
#          #Apple LLVM version 6.0 (clang-600.0.54) (based on LLVM 3.5svn)
#        - os: osx
#          osx_image: beta-xcode6.2
#          compiler: gcc
#          if: env(DPL_ENABLED) != "1" OR branch NOT IN (env(DPL_BRANCHES)) OR env(DPL_TERMINATE_TESTS) != "1"
#          #Apple LLVM version 6.0 (clang-600.0.57) (based on LLVM 3.5svn)
##        - os: osx
##          osx_image: beta-xcode6.3
##          if: env(DPL_ENABLED) != "1" OR branch NOT IN (env(DPL_BRANCHES)) OR env(DPL_TERMINATE_TESTS) != "1"
##          #I think xcode.6.3 VM is broken, it does not boot
#        - os: osx
#          osx_image: xcode6.4
#          if: env(DPL_ENABLED) != "1" OR branch NOT IN (env(DPL_BRANCHES)) OR env(DPL_TERMINATE_TESTS) != "1"
#          #Apple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn)
#        - os: osx
#          osx_image: xcode7
#          if: env(DPL_ENABLED) != "1" OR branch NOT IN (env(DPL_BRANCHES)) OR env(DPL_TERMINATE_TESTS) != "1"
#          #Apple LLVM version 7.0.0 (clang-700.0.72)
#        - os: osx
#          osx_image: xcode7.1
#          if: env(DPL_ENABLED) != "1" OR branch NOT IN (env(DPL_BRANCHES)) OR env(DPL_TERMINATE_TESTS) != "1"
#          #Apple LLVM version 7.0.0 (clang-700.1.76)
#        - os: osx
#          osx_image: xcode7.2
#          if: env(DPL_ENABLED) != "1" OR branch NOT IN (env(DPL_BRANCHES)) OR env(DPL_TERMINATE_TESTS) != "1"
#          #Apple LLVM version 7.0.2 (clang-700.1.81)
        - os: osx
          osx_image: xcode7.3
          if: env(DPL_ENABLED) != "1" OR branch NOT IN (env(DPL_BRANCHES)) OR env(DPL_TERMINATE_TESTS) != "1"
          #Apple LLVM version 7.3.0 (clang-703.0.31)
################################
# Deployer Buildbots - OSX
################################
        - os: osx
          osx_image: xcode7.3
          if: env(DPL_ENABLED) = "1" AND (env(DPL_TRIGGER) = "" OR commit_message =~ /^.*\[env(DPL_TRIGGER).*$/) AND (env(DPL_BRANCHES) = "" OR branch IN (env(DPL_BRANCHES))) AND (env(DPL_OSNAMES) = "" OR os IN (env(DPL_OSNAMES))) AND (env(DPL_JOBNAMES) = "" OR env(_DPL_JOB_NAME) = "" OR env(_DPL_JOB_NAME) IN (env(DPL_JOBNAMES)))
          env:
          - _DPL_JOB_ENABLED=1
          - _DPL_JOB_NAME=osx
          - _DPL_FTP_TARGET=1
          - _DPL_PACKAGE_BINARY=1
          #- ASSET_FILES_OPTIONAL_GET=1
          #Apple LLVM version 7.3.0 (clang-703.0.31)
################################
# Deployer Buildbots - Linux
# List Ubuntu LTS first, newest to oldest
# Then list non-LTS, newest to oldest
# Package assets (_DPL_PACKAGE_ASSET) on the oldest release
################################
        - os: linux
          addons:
            apt:
              sources:
              - ubuntu-toolchain-r-test
              packages:
              - libsdl2-mixer-dev
              - libpng-dev
              - libgl1-mesa-dev
              - libgme-dev
              - p7zip-full
              - gcc-4.8
          compiler: gcc-4.8
          dist: xenial
          if: env(DPL_ENABLED) = "1" AND (env(DPL_BRANCHES) = "" OR branch IN (env(DPL_BRANCHES))) AND (env(DPL_OSNAMES) = "" OR os IN (env(DPL_OSNAMES))) AND (env(DPL_JOBNAMES) = "" OR env(_DPL_JOB_NAME) = "" OR env(_DPL_JOB_NAME) IN (env(DPL_JOBNAMES)))
          env:
          - _DPL_JOB_ENABLED=1
          - _DPL_JOB_NAME=bionic
          - _DPL_DPUT_TARGET=1
          - _DPL_PACKAGE_SOURCE=1
          - PACKAGE_DISTRO=bionic
          - PACKAGE_SUBVERESION=~18.04bionic
          #gcc-4.8 (Ubuntu 4.8.5-2ubuntu1~14.04.1) 4.8.5
        - os: linux
          addons:
            apt:
              sources:
              - ubuntu-toolchain-r-test
              packages:
              - libsdl2-mixer-dev
              - libpng-dev
              - libgl1-mesa-dev
              - libgme-dev
              - p7zip-full
              - gcc-4.8
          compiler: gcc-4.8
          dist: trusty
          if: env(DPL_ENABLED) = "1" AND (env(DPL_BRANCHES) = "" OR branch IN (env(DPL_BRANCHES))) AND (env(DPL_OSNAMES) = "" OR os IN (env(DPL_OSNAMES))) AND (env(DPL_JOBNAMES) = "" OR env(_DPL_JOB_NAME) = "" OR env(_DPL_JOB_NAME) IN (env(DPL_JOBNAMES)))
          env:
          - _DPL_JOB_ENABLED=1
          - _DPL_JOB_NAME=trusty
          - _DPL_DPUT_TARGET=1
          - _DPL_PACKAGE_SOURCE=1
          - _DPL_PACKAGE_ASSET=1
          - PACKAGE_DISTRO=trusty
          - PACKAGE_SUBVERESION=~14.04trusty
          #gcc-4.8 (Ubuntu 4.8.5-2ubuntu1~14.04.1) 4.8.5
        - os: linux
          addons:
            apt:
              sources:
              - ubuntu-toolchain-r-test
              packages:
              - libsdl2-mixer-dev
              - libpng-dev
              - libgl1-mesa-dev
              - libgme-dev
              - p7zip-full
              - gcc-4.8
          compiler: gcc-4.8
          dist: xenial
          if: env(DPL_ENABLED) = "1" AND (env(DPL_BRANCHES) = "" OR branch IN (env(DPL_BRANCHES))) AND (env(DPL_OSNAMES) = "" OR os IN (env(DPL_OSNAMES))) AND (env(DPL_JOBNAMES) = "" OR env(_DPL_JOB_NAME) = "" OR env(_DPL_JOB_NAME) IN (env(DPL_JOBNAMES)))
          env:
          - _DPL_JOB_ENABLED=1
          - _DPL_JOB_NAME=disco
          - _DPL_DPUT_TARGET=1
          - _DPL_PACKAGE_SOURCE=1
          - PACKAGE_DISTRO=disco
          - PACKAGE_SUBVERESION=~19.04disco
          #gcc-4.8 (Ubuntu 4.8.5-2ubuntu1~14.04.1) 4.8.5
        - os: linux
          addons:
            apt:
              sources:
              - ubuntu-toolchain-r-test
              packages:
              - libsdl2-mixer-dev
              - libpng-dev
              - libgl1-mesa-dev
              - libgme-dev
              - p7zip-full
              - gcc-4.8
          compiler: gcc-4.8
          dist: xenial
          if: env(DPL_ENABLED) = "1" AND (env(DPL_BRANCHES) = "" OR branch IN (env(DPL_BRANCHES))) AND (env(DPL_OSNAMES) = "" OR os IN (env(DPL_OSNAMES))) AND (env(DPL_JOBNAMES) = "" OR env(_DPL_JOB_NAME) = "" OR env(_DPL_JOB_NAME) IN (env(DPL_JOBNAMES)))
          env:
          - _DPL_JOB_ENABLED=1
          - _DPL_JOB_NAME=cosmic
          - _DPL_DPUT_TARGET=1
          - _DPL_PACKAGE_SOURCE=1
          - PACKAGE_DISTRO=cosmic
          - PACKAGE_SUBVERESION=~18.10cosmic
          #gcc-4.8 (Ubuntu 4.8.5-2ubuntu1~14.04.1) 4.8.5
        - os: linux
          addons:
            apt:
              sources:
              - ubuntu-toolchain-r-test
              packages:
              - libsdl2-mixer-dev
              - libpng-dev
              - libgl1-mesa-dev
              - libgme-dev
              - p7zip-full
              - gcc-4.8
          compiler: gcc-4.8
          dist: xenial
          if: env(DPL_ENABLED) = "1" AND (env(DPL_BRANCHES) = "" OR branch IN (env(DPL_BRANCHES))) AND (env(DPL_OSNAMES) = "" OR os IN (env(DPL_OSNAMES))) AND (env(DPL_JOBNAMES) = "" OR env(_DPL_JOB_NAME) = "" OR env(_DPL_JOB_NAME) IN (env(DPL_JOBNAMES)))
          env:
          - _DPL_JOB_ENABLED=1
          - _DPL_JOB_NAME=xenial
          - _DPL_DPUT_TARGET=1
          - _DPL_PACKAGE_SOURCE=1
          - PACKAGE_DISTRO=xenial
          - PACKAGE_SUBVERESION=~16.04xenial
          #gcc-4.8 (Ubuntu 4.8.5-2ubuntu1~14.04.1) 4.8.5
    allow_failures:
      - env: _DPL_JOB_ENABLED=1
      - compiler: clang-3.5
      - compiler: clang-3.6
      - compiler: clang-3.7
      - compiler: clang-3.8
      - compiler: clang-3.9
      - compiler: clang-4.0
      - compiler: clang-5.0
      - compiler: gcc-8


cache:
  apt: true
  ccache: true
  directories:
  - $HOME/srb2_cache


addons:
  apt:
    packages:
    - libsdl2-mixer-dev
    - libpng-dev
    - libgl1-mesa-dev
    - libgme-dev
    - zlib1g-dev
    - p7zip-full


before_install:
  # Initialize Deployer defaults
  - . ./travis/deployer_defaults.sh
  # Initialize Deployer; check if Deployer is enabled
  # This needs to be run in the current shell so that $__DPL_ACTIVE is set for this session
  - . ./travis/deployer.sh
  # Also check if we should now terminate
  - if [[ "$__DPL_ACTIVE_GLOBALLY" == "1" ]] && [[ "$DPL_JOB_ALL" != "1" ]]; then
      if [[ "$__DPL_ACTIVE" != "1" ]]; then
        echo "Exiting early because this job is not deploying.";
        exit;
      fi;
    fi


install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      brew update;
      brew install sdl2 game-music-emu zlib p7zip;
      brew install sdl2_mixer --with-flac --with-fluid-synth --with-mpg123;
      brew install cmake||true;
    fi
  - mkdir -p $HOME/srb2_cache


before_script:
  # OLDPWD is root repo folder
  - OLDPWD=$PWD
  - cd "$HOME/srb2_cache"

  # stat is different for OSX
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      STATCMD="stat -f \"%Sm\" -t \"%Y-%m-%d %H:%M\"";
    else
      STATCMD="stat -c %y";
    fi

  # Get asset files (required for MD5)
  - if [[ "$ASSET_ARCHIVE_PATH" != "" ]]; then
      if [ -f "$(basename $ASSET_ARCHIVE_PATH)" ]; then
        echo "$(basename $ASSET_ARCHIVE_PATH) cache date -- $($STATCMD $(basename $ASSET_ARCHIVE_PATH))";
      fi;
      wget --verbose --server-response -N "$ASSET_ARCHIVE_PATH";
      7z x "$(basename $ASSET_ARCHIVE_PATH)" -o"$HOME/srb2_cache" -aos;
      for f in $ASSET_FILES_REQUIRED; do
        cp "$HOME/srb2_cache/$f" "$OLDPWD/assets/$f";
      done;
    fi;

  # Get individual required files
  - for f in $ASSET_FILES_REQUIRED; do
      if [ -f "$f" ]; then
        echo "$f cache date -- $($STATCMD $f)";
      fi;
      wget --verbose --server-response -N "$ASSET_BASE_PATH/$f";
      if [ ! -f "$HOME/srb2_cache/$f" ]; then
        echo "Could not download \"$ASSET_BASE_PATH/$f\"";
        return 1;
      fi;
      cp "$HOME/srb2_cache/$f" "$OLDPWD/assets/$f";
    done;

  # Get the docs
  - for f in $ASSET_FILES_DOCS; do
      if [ -f "$f" ]; then
        echo "$f cache date -- $($STATCMD $f)";
      fi;
      wget --verbose --server-response -N "$ASSET_BASE_PATH/$f";
      cp "$HOME/srb2_cache/$f" "$OLDPWD/assets/$f";
    done;

  # Get optional files too
  - if [[ "$ASSET_FILES_OPTIONAL_GET" == "1" ]]; then
      for f in $ASSET_FILES_OPTIONAL; do
        if [ -f "$f" ]; then
          echo "$f cache date -- $($STATCMD $f)";
        fi;
        wget --verbose --server-response -N "$ASSET_BASE_PATH/$f";
        cp "$HOME/srb2_cache/$f" "$OLDPWD/assets/$f";
      done;
    fi;

  # Go back to root repo folder
  - cd "$OLDPWD"

  # Prepare CMake asset lists
  - SRB2_ASSET_REQUIRED=$(echo ${ASSET_FILES_REQUIRED// /\;})
  - SRB2_ASSET_OPTIONAL=$(echo ${ASSET_FILES_OPTIONAL// /\;})
  - SRB2_ASSET_DOCS=$(echo ${ASSET_FILES_DOCS// /\;})

  # Prepare CMake
  - mkdir build
  - cd build
  - mkdir package
  - export CFLAGS="-Wall -W -Werror $WFLAGS"
  - export CCACHE_COMPRESS=true
  - cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=$PWD/bin -DCPACK_PACKAGE_DIRECTORY=$PWD/package
      -DSRB2_ASSET_REQUIRED="${SRB2_ASSET_REQUIRED}" -DSRB2_ASSET_OPTIONAL="${SRB2_ASSET_OPTIONAL}"
      -DSRB2_ASSET_DOCS="${SRB2_ASSET_DOCS}"
      -DCPACK_PACKAGE_DESCRIPTION_SUMMARY="${PROGRAM_NAME}"
      -DCPACK_PACKAGE_VENDOR="${PROGRAM_VENDOR}"
      -DSRB2_SDL2_EXE_NAME="${PROGRAM_FILENAME}"


script:
  # Build our Makefile from Cmake!
  - if [[ "$__DPL_ACTIVE" == "1" ]]; then
      . ../travis/deployer_build.sh;
    else
      make -k;
    fi;

after_success:
  # Run the Deployer scripts
  - . ../travis/deployer_ftp.sh
  - . ../travis/deployer_dput.sh
